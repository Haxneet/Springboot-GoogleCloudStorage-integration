spring.application.name=document-management

# PostgreSQL Configuration for Google Cloud SQL
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.driver-class-name=org.postgresql.Driver
gcp.secrets.manager.secret.name=${GCP_SECRET_NAME}

spring.jpa.show-sql=true
spring.datasource.instance-connection-name=${GCP_INSTANCE_CONNECTION_NAME}
spring.datasource.iam-user=${IAM_USER}

# Google Cloud Storage Configuration
gcp.storage.bucket-name=${GCS_BUCKET_NAME}
gcp.region=${GCP_REGION}
spring.servlet.multipart.enabled=true

# Specify explicitly the dialect (here for PostgreSQL)
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Disable Hibernate usage of JDBC metadata
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=false

# Database initialization
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=never

# Logging Configuration
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping=DEBUG
logging.level.com.example.document_management=DEBUG
logging.level.com.google.cloud.storage=DEBUG
logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG
spring.mvc.log-request-details=true
