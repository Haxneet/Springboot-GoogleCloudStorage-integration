spring.application.name=document-management

# PostgreSQL Configuration for Google Cloud SQL
spring.datasource.url=jdbc:postgresql://34.42.225.196:5432/postgres

spring.datasource.driver-class-name=org.postgresql.Driver

gcp.secrets.manager.secret.name=my-database-credentials

spring.jpa.show-sql=true
spring.datasource.instance-connection-name=western-beanbag-432114-m2:us-central1:dms-instance
spring.datasource.iam-user=harryydhaliwal@gmail.com


# Google Cloud Storage Configuration
gcp.storage.bucket-name=bucket-for-dms
gcp.region=us-central1
spring.servlet.multipart.enabled=true

# Specify explicitly the dialect (here for PostgreSQL)
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Disable Hibernate usage of JDBC metadata
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=false

# Database initialization should typically be performed outside of Spring lifecycle
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=never
 

logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping=DEBUG
# Set root logging level to DEBUG
#logging.level.root=DEBUG

# Set logging level for your application package
logging.level.com.example.document_management=DEBUG

# Set logging level for Google Cloud Storage SDK
logging.level.com.google.cloud.storage=DEBUG
logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG
spring.mvc.log-request-details=true

spring.autoconfigure.exclude: org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
